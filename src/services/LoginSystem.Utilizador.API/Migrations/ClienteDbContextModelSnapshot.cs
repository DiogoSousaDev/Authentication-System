// <auto-generated />
using System;
using LoginSystem.Utilizador.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoginSystem.Utilizador.API.Migrations
{
    [DbContext(typeof(ClienteDbContext))]
    partial class ClienteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LoginSystem.Utilizador.API.Models.Morada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Porta")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("UtilizadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UtilizadorId")
                        .IsUnique();

                    b.ToTable("Moradas", (string)null);
                });

            modelBuilder.Entity("LoginSystem.Utilizador.API.Models.Utilizador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Excluido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores", (string)null);
                });

            modelBuilder.Entity("LoginSystem.Utilizador.API.Models.Morada", b =>
                {
                    b.HasOne("LoginSystem.Utilizador.API.Models.Utilizador", "Utilizador")
                        .WithOne("Morada")
                        .HasForeignKey("LoginSystem.Utilizador.API.Models.Morada", "UtilizadorId")
                        .IsRequired();

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("LoginSystem.Utilizador.API.Models.Utilizador", b =>
                {
                    b.OwnsOne("LoginSystem.Core.DomainObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UtilizadorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnType("varchar(254)")
                                .HasColumnName("Email");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizadores");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.OwnsOne("LoginSystem.Core.DomainObjects.Nif", "NIF", b1 =>
                        {
                            b1.Property<Guid>("UtilizadorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("varchar(9)")
                                .HasColumnName("Nif");

                            b1.HasKey("UtilizadorId");

                            b1.ToTable("Utilizadores");

                            b1.WithOwner()
                                .HasForeignKey("UtilizadorId");
                        });

                    b.Navigation("Email");

                    b.Navigation("NIF");
                });

            modelBuilder.Entity("LoginSystem.Utilizador.API.Models.Utilizador", b =>
                {
                    b.Navigation("Morada");
                });
#pragma warning restore 612, 618
        }
    }
}
